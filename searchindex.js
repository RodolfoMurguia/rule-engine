Search.setIndex({docnames:["grammar","index","rule_engine/ast","rule_engine/engine","rule_engine/errors","rule_engine/index","rule_engine/parser"],envversion:53,filenames:["grammar.rst","index.rst","rule_engine/ast.rst","rule_engine/engine.rst","rule_engine/errors.rst","rule_engine/index.rst","rule_engine/parser.rst"],objects:{"rule_engine.ast":{ArithmeticExpression:[2,1,1,""],BitwiseExpression:[2,1,1,""],BooleanExpression:[2,1,1,""],ComparisonExpression:[2,1,1,""],DataType:[2,1,1,""],ExpressionBase:[2,1,1,""],FloatExpression:[2,1,1,""],LeftOperatorRightExpressionBase:[2,1,1,""],LiteralExpressionBase:[2,1,1,""],LogicExpression:[2,1,1,""],Statement:[2,1,1,""],StringExpression:[2,1,1,""],SymbolExpression:[2,1,1,""],TernaryExpression:[2,1,1,""],UnaryExpression:[2,1,1,""],is_natural_number:[2,4,1,""],is_real_number:[2,4,1,""]},"rule_engine.ast.ArithmeticExpression":{result_type:[2,2,1,""]},"rule_engine.ast.BitwiseExpression":{result_type:[2,2,1,""]},"rule_engine.ast.BooleanExpression":{result_type:[2,2,1,""]},"rule_engine.ast.ComparisonExpression":{result_type:[2,2,1,""]},"rule_engine.ast.DataType":{BOOLEAN:[2,2,1,""],FLOAT:[2,2,1,""],STRING:[2,2,1,""],UNDEFINED:[2,2,1,""]},"rule_engine.ast.ExpressionBase":{evaluate:[2,3,1,""],reduce:[2,3,1,""],result_type:[2,2,1,""]},"rule_engine.ast.FloatExpression":{result_type:[2,2,1,""]},"rule_engine.ast.LeftOperatorRightExpressionBase":{__init__:[2,3,1,""],compatible_types:[2,2,1,""]},"rule_engine.ast.LiteralExpressionBase":{__init__:[2,3,1,""]},"rule_engine.ast.LogicExpression":{result_type:[2,2,1,""]},"rule_engine.ast.StringExpression":{result_type:[2,2,1,""]},"rule_engine.ast.SymbolExpression":{result_type:[2,2,1,""]},"rule_engine.ast.TernaryExpression":{result_type:[2,2,1,""]},"rule_engine.ast.UnaryExpression":{result_type:[2,2,1,""]},"rule_engine.engine":{Context:[3,1,1,""],Rule:[3,1,1,""],resolve_attribute:[3,4,1,""],resolve_item:[3,4,1,""],type_resolver_from_dict:[3,4,1,""]},"rule_engine.engine.Context":{__init__:[3,3,1,""],regex_flags:[3,2,1,""],resolve:[3,3,1,""],resolve_type:[3,3,1,""],symbols:[3,2,1,""]},"rule_engine.engine.Rule":{__init__:[3,3,1,""],filter:[3,3,1,""],is_valid:[3,5,1,""],matches:[3,3,1,""],parser:[3,2,1,""]},"rule_engine.errors":{EngineError:[4,6,1,""],EvaluationError:[4,6,1,""],RuleSyntaxError:[4,6,1,""],SymbolResolutionError:[4,6,1,""]},"rule_engine.errors.EngineError":{__init__:[4,3,1,""]},"rule_engine.errors.RuleSyntaxError":{__init__:[4,3,1,""],token:[4,2,1,""]},"rule_engine.errors.SymbolResolutionError":{__init__:[4,3,1,""],symbol_name:[4,2,1,""]},"rule_engine.parser":{Parser:[6,1,1,""],ParserBase:[6,1,1,""]},"rule_engine.parser.ParserBase":{__init__:[6,3,1,""],parse:[6,3,1,""],precedence:[6,2,1,""],reserved_words:[6,2,1,""]},rule_engine:{ast:[2,0,0,"-"],engine:[3,0,0,"-"],errors:[4,0,0,"-"],parser:[6,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","attribute","Python attribute"],"3":["py","method","Python method"],"4":["py","function","Python function"],"5":["py","classmethod","Python class method"],"6":["py","exception","Python exception"]},objtypes:{"0":"py:module","1":"py:class","2":"py:attribute","3":"py:method","4":"py:function","5":"py:classmethod","6":"py:exception"},terms:{"abstract":[2,3,6],"boolean":2,"class":4,"default":3,"enum":2,"float":[0,2],"int":3,"return":[2,3,6],"true":[0,2,3],"while":[3,4,6],Not:0,The:[0,1,2,3,4,6],These:2,__init__:[2,3,4,6],abl:[2,4,6],access:3,addit:[0,2],addition:3,after:3,against:3,all:[2,3],allow:[3,6],ani:[0,3,6],api:[3,6],appear:3,appli:[1,3],applic:2,appropri:3,arbitrari:[1,3],arithmet:[0,2],arithmeticexpress:2,arrai:2,aspect:3,ast:[1,3,4,5,6],attribut:3,avail:[1,4],awar:0,base:[3,4,6],basic:0,been:6,befor:[2,3],behavior:3,being:[2,3,4],bitwis:[0,2],bitwiseexpress:2,bool:[2,3,6],booleanexpress:2,callback:3,can:[1,2,3,4,6],capabl:2,case_fals:2,case_tru:2,caus:6,center:2,certain:3,chang:3,charact:2,check:[2,3],children:2,classmethod:3,code:1,collect:[2,3],compar:0,comparison:2,comparisonexpress:2,compat:[0,2,3],compatible_typ:2,complex:2,compon:6,compos:2,compris:2,condit:2,consid:2,constant:[2,3],constraint:3,construct:6,contain:[2,3,4,6],content:1,context:[2,3,6],conveni:3,convert:[2,6],correct:3,correspond:[3,6],creat:[1,3],current:2,custom:3,data:[0,2,3],datatyp:[2,3],debug:6,defin:[2,3,6],definit:6,descript:[0,4],despit:2,dict:3,dictionari:3,differ:2,divis:0,doe:[3,6],dure:[4,6],each:3,effect:3,effici:6,either:[0,2,3],enabl:6,engin:5,engineerror:4,ensur:3,equal:[0,2],error:[1,5],evalu:[1,2,3,4,6],evaluationerror:[4,6],exampl:2,except:[0,3,6],exist:3,expon:0,expos:3,express:[0,1,3],expressionbas:2,extern:3,face:3,fail:0,fals:[2,6],featur:6,filter:3,flag:3,floatexpress:2,floor:0,form:3,from:[1,2,3,4,6],gener:[1,2,3],github:1,grammar:[1,2,3,4,6],greater:0,handl:2,has:6,help:2,hint:3,homepag:1,how:3,identifi:4,includ:0,incompat:0,index:1,indic:2,inform:[2,3],inherit:[4,6],instanc:[2,3],integ:2,interfac:3,involv:[2,6],is_natural_numb:2,is_real_numb:2,is_valid:3,issu:[3,4],item:3,iter:3,itself:2,known:3,kwarg:6,later:6,left:0,leftoperatorrightexpressionbas:2,less:0,level:2,librari:1,liter:[3,6],literalexpressionbas:2,logic:[0,1,2,3,6],logicexpress:2,look:3,lose:2,make:6,mani:6,map:[3,6],match:[0,1,2,3],member:[3,6],messag:4,method:[2,3],modul:[1,2,3,4,6],modulo:0,more:6,multipl:[0,6],must:[2,3],name:[2,3,4,6],namedtupl:3,nan:2,nativ:2,natur:2,need:3,neg:2,node:[2,4,6],non:2,none:[2,3,4],number:[0,2],numer:[0,2],object:[1,2,3,6],occur:4,onc:6,one:3,oper:[1,3,6],option:[3,6],other:[3,4],otherwis:2,over:3,packag:[3,4],page:1,paramet:[2,3,4,6],pars:[2,3,4,6],parser:[1,3,5],parserbas:6,particular:2,pass:3,pattern:3,perform:3,phase:[4,6],place:[3,6],ply:[4,6],point:2,preced:6,primari:3,project:1,provid:[1,3,6],purpos:[1,2],python:[2,3],rais:[0,3,4,6],real:2,reduc:[2,6],reduct:[4,6],refer:3,regard:3,regex:[0,3],regex_flag:3,regular:[0,2],relat:[4,6],replac:[2,3],repres:2,reserv:6,reserved_word:6,resolut:2,resolv:[2,3,4],resolve_attribut:3,resolve_item:3,resolve_typ:3,result:[2,3],result_typ:2,right:0,rule:[3,4,6],rule_engin:[1,2,3,4,6],rulesyntaxerror:4,safe:2,same:3,search:[0,1,3],see:3,sensit:3,separ:2,shift:[0,2],should:3,side:2,smaller:2,some:3,sourc:[1,2,3,4,6],specif:6,specifi:[3,6],statement:[2,6],str:[2,3,4,6],string:[0,2,3],stringexpress:2,structur:3,subclass:[2,3],subset:2,subtract:[0,2],success:2,suitabl:3,sup:[],support:[1,2,3],symbol:[2,3,4],symbol_nam:4,symbolexpress:2,symbolresolutionerror:[3,4],syntact:3,syntax:[2,3,4,6],take:6,ternari:2,ternaryexpress:2,test:3,text:[2,3,4,6],than:0,thei:1,thi:[1,2,3,4,6],thing:[2,3],time:[2,3,4,6],token:4,top:2,tree:[2,3,6],tupl:2,type:[0,2,3,6],type_:2,type_hint:2,type_resolv:3,type_resolver_from_dict:3,typeerror:3,unaryexpress:2,undefin:[2,3],unknown:2,use:[0,2,3],used:[0,2,3],using:[0,6],valid:[2,3],valu:[2,3,4],variou:6,verifi:3,version:2,well:3,what:[3,4],when:[0,3,4,6],whether:[1,2,3,6],which:[1,2,3,4,6],whitelist:3,whole:2,within:[3,4,6],without:2,word:6,would:3,xor:[0,2],yield:3},titles:["Grammar","Rule Engine Documentation","<code class=\"docutils literal notranslate\"><span class=\"pre\">ast</span></code>","<code class=\"docutils literal notranslate\"><span class=\"pre\">engine</span></code>","<code class=\"docutils literal notranslate\"><span class=\"pre\">errors</span></code>","<code class=\"docutils literal notranslate\"><span class=\"pre\">rule_engine</span></code>","<code class=\"docutils literal notranslate\"><span class=\"pre\">parser</span></code>"],titleterms:{"class":[2,3,6],"function":[2,3],ast:2,base:2,document:1,engin:[1,3],error:4,except:4,express:2,grammar:0,indic:1,left:2,liter:2,miscellan:2,oper:[0,2],parser:6,right:2,rule:1,rule_engin:5,support:0,tabl:1}})